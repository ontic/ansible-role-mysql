# Copyright (c) Ontic. (http://www.ontic.com.au). All rights reserved.
# See the COPYING file bundled with this package for license details.

---

- name: 'MySQL | Stop MySQL when resizing InnoDB log files.'
  become: yes
  service:
    name: '{{ mysql_service_name }}'
    state: 'stopped'
  when: 'not mysql_installed.stat.exists or mysql_resize_innodb_log_files'

- name: 'MySQL | Delete InnoDB log files when resizing.'
  become: yes
  file:
    path: '{{ item }}'
    state: 'absent'
  with_items:
    - '/var/lib/mysql/ib_logfile0'
    - '/var/lib/mysql/ib_logfile1'
  when: 'not mysql_installed.stat.exists or mysql_resize_innodb_log_files'

- name: 'MySQL | Replace the global config file.'
  become: yes
  template:
    src: '{{ mysql_global_config_template }}'
    dest: '{{ mysql_global_config_file }}'
    force: '{{ "yes" if mysql_installed.stat.exists == false or mysql_global_config_file_refresh else "no" }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'restart mysql'
  when: 'mysql_global_config_template | default(None) != None'

- name: 'MySQL | Configure properties in global config file.'
  become: yes
  ini_file:
    dest: '{{ mysql_global_config_file }}'
    section: '{{ item.section }}'
    option: '{{ item.option | default(omit) }}'
    value: '{{ item.value | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'restart mysql'
  with_items: '{{ mysql_global_config }}'
  when: 'mysql_global_config | default(None) != None'

- name: 'MySQL | Set ownership of directories.'
  become: yes
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'mysql'
    group: 'mysql'
    mode: '0755'
  with_items:
    - '{{ mysql_pid_path }}'
    - '{{ mysql_log_path }}'
  when: 'ansible_os_family == "RedHat"'

- name: 'MySQL | Ensure MySQL is started.'
  become: yes
  service:
    name: '{{ mysql_service_name }}'
    state: 'started'

- name: 'MySQL | Prevent root login remotely.'
  become: yes
  shell: 'mysql -NBe ''DELETE FROM mysql.user WHERE User="root" AND Host NOT IN ("localhost", "127.0.0.1", "::1")'''
  environment:
    HOME: '/root'
  changed_when: false

- name: 'MySQL | Retrieve the root user hosts.'
  become: yes
  shell: 'mysql -NBe ''SELECT Host FROM mysql.user WHERE User = "{{ mysql_root_username }}" ORDER BY (host="localhost") ASC'''
  environment:
    HOME: '/root'
  register: 'mysql_root_hosts'
  changed_when: false
  check_mode: no
  when: 'mysql_update_root_password or mysql_debian_installed_packages.changed == true or mysql_redhat_installed_packages.changed == true'

- name: 'MySQL | Retrieve the anonymous user hosts.'
  become: yes
  shell: 'mysql -NBe ''SELECT Host FROM mysql.user WHERE User = ""'''
  environment:
    HOME: '/root'
  register: 'mysql_anonymous_hosts'
  changed_when: false
  check_mode: no

- name: 'MySQL | Update the root user password.'
  become: yes
  shell: 'mysql -NBe ''SET PASSWORD FOR "{{ mysql_root_username }}"@"{{ item }}" = PASSWORD("{{ mysql_root_password }}");'''
  environment:
    HOME: '/root'
  ignore_errors: yes
  register: 'mysql_update_root_password_result'
  with_items: '{{ mysql_root_hosts.stdout_lines | default([]) }}'
  when: 'mysql_old_root_password or mysql_debian_installed_packages.changed == true or mysql_redhat_installed_packages.changed == true'

- name: 'MySQL | Update the root user password if failed.'
  become: yes
  shell: 'mysql -u root -NBe ''ALTER USER "{{ mysql_root_username }}"@"{{ item }}" IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}";'''
  environment:
    HOME: '/root'
  with_items: '{{ mysql_root_hosts.stdout_lines | default([]) }}'
  when: 'mysql_update_root_password_result is defined and mysql_update_root_password_result is failed'

#- name: 'MySQL | Update the root user password.'
#  become: yes
#  mysql_user:
#    name: '{{ mysql_root_username }}'
#    host: '{{ item }}'
#    password: '{{ mysql_root_password }}'
#    login_user: '{{ mysql_root_username }}'
#    login_password: '{{ mysql_old_root_password }}'
#  with_items: '{{ mysql_root_hosts.stdout_lines }}'
#  when: 'mysql_update_root_password or mysql_debian_installed_packages.changed == true or mysql_redhat_installed_packages.changed == true'

- name: 'MySQL | Update the root config file with credentials.'
  become: yes
  template:
    src: '{{ mysql_root_config_template }}'
    dest: '{{ mysql_root_config_file }}'
    owner: 'root'
    group: 'root'
    mode: '0600'

- name: 'MySQL | Remove anonymous users.'
  become: yes
  mysql_user:
    name: ''
    host: '{{ item }}'
    state: 'absent'
  with_items: '{{ mysql_anonymous_hosts.stdout_lines }}'

- name: 'MySQL | Remove the test database.'
  become: yes
  mysql_db:
    name: 'test'
    state: 'absent'
    login_user: '{{ mysql_root_username }}'
    login_password: '{{ mysql_root_password }}'

- name: 'MySQL | Configure users.'
  become: yes
  mysql_user:
    append_privs: '{{ item.append_privs | default(omit) }}'
    check_implicit_admin: '{{ item.check_implicit_admin | default(omit) }}'
    config_file: '{{ item.config_file | default(omit) }}'
    connect_timeout: '{{ item.connect_timeout | default(omit) }}'
    encrypted: '{{ item.encrypted | default(omit) }}'
    host: '{{ item.host | default(omit) }}'
    host_all: '{{ item.host_all | default(omit) }}'
    login_host: '{{ item.login_host | default(omit) }}'
    login_password: '{{ item.login_password | default(mysql_root_password) }}'
    login_port: '{{ item.login_port | default(omit) }}'
    login_unix_socket: '{{ item.login_unix_socket | default(omit) }}'
    login_user: '{{ item.login_user | default(mysql_root_username) }}'
    name: '{{ item.name }}'
    password: '{{ item.password | default(omit) }}'
    priv: '{{ item.priv | default("*.*:USAGE") }}'
    sql_log_bin: '{{ item.sql_log_bin | default(omit) }}'
    ssl_ca: '{{ item.ssl_ca | default(omit) }}'
    ssl_cert: '{{ item.ssl_cert | default(omit) }}'
    ssl_key: '{{ item.ssl_key | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    update_password: '{{ item.update_password | default(omit) }}'
  with_items: '{{ mysql_users }}'
  when: 'mysql_users | default(None) != None'

- name: 'MySQL | Configure databases.'
  become: yes
  mysql_db:
    collation: '{{ item.collation | default("utf8_general_ci") }}'
    config_file: '{{ item.config_file | default(omit) }}'
    connect_timeout: '{{ item.connect_timeout | default(omit) }}'
    encoding: '{{ item.encoding | default("utf8") }}'
    login_host: '{{ item.login_host | default(omit) }}'
    login_password: '{{ item.login_password | default(mysql_root_password) }}'
    login_port: '{{ item.login_port | default(omit) }}'
    login_unix_socket: '{{ item.login_unix_socket | default(omit) }}'
    login_user: '{{ item.login_user | default(mysql_root_username) }}'
    name: '{{ item.name }}'
    quick: '{{ item.quick | default(omit) }}'
    single_transaction: '{{ item.single_transaction | default(omit) }}'
    ssl_ca: '{{ item.ssl_ca | default(omit) }}'
    ssl_cert: '{{ item.ssl_cert | default(omit) }}'
    ssl_key: '{{ item.ssl_key | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    target: '{{ item.target | default(omit) }}'
  with_items: '{{ mysql_databases }}'
  when: 'mysql_databases | default(None) != None'